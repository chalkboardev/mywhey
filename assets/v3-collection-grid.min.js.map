{"version":3,"file":"/assets/v3-collection-grid.min.js","mappings":"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","sources":["webpack://quickfire-shopify-theme/./resources/js/sections/v3-collection-grid.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n\n    // Load more products\n\n    const load_btn = document.querySelector(\".custom-filter-load-more\");\n\n    let products_on_page = document.querySelector('.collection-grid');\n\n    let url = products_on_page.getAttribute('data-next-url');\n\n    const spinner = document.querySelector('.load-more-spinner');\n\n    if (load_btn) {\n        if (url === '') {\n            load_btn.style.display = 'none';\n        }\n\n        load_btn.addEventListener(\"click\", ()=> {\n\n            spinner.classList.add(\"show\");\n\n            fetch(url)\n                .then(function (response) {\n                    if (response.ok) {\n                        return response.text();\n                    } else {\n                        throw new Error('Network response was not ok.');\n                    }\n                })\n                .then(function (data) {\n                    const html = document.createElement('div');\n                    html.innerHTML = data;\n\n                    let links = html.querySelector('.pagination-links').innerHTML;\n                    document.querySelector('.pagination-links').innerHTML = links;\n\n                    let new_grid = html.querySelector('.collection-grid');\n                    url = new_grid.getAttribute('data-next-url');\n                    if (url === '') {\n                        load_btn.style.display = 'none';\n                    }\n                    let new_products = new_grid.querySelectorAll(\".product-card, #collection-grid-cta, #collection-grid-cta-2\");\n\n                    new_products.forEach(new_prod => {\n                        products_on_page.append(new_prod);\n                    });\n                    spinner.classList.remove(\"show\");\n                })\n                .catch(function (error) {\n                    window.log(error);\n                });\n\n\n        })\n    }\n\n    const rangeInput = document.querySelectorAll(\".range-input input\");\n    if (rangeInput) {\n        const priceInput = document.querySelectorAll(\".price-input-show\");\n        const range = document.querySelector(\".slider .progress\");\n        const minFilterInput = document.querySelector('.min-price-filter');\n        const maxFilterInput = document.querySelector('.max-price-filter');\n        let priceGap = 1;\n\n        if (maxFilterInput) {\n            range.style.left = ((minFilterInput.value / rangeInput[0].max) * 100) + \"%\";\n            range.style.right = 100 - (maxFilterInput.value / rangeInput[1].max) * 100 + \"%\";\n            rangeInput[0].value = minFilterInput.value;\n            rangeInput[1].value = maxFilterInput.value;\n            priceInput[0].innerHTML = minFilterInput.value;\n            priceInput[1].innerHTML = maxFilterInput.value;\n        }\n\n        priceInput.forEach(input =>{\n            input.addEventListener(\"input\", e =>{\n                let minPrice = parseInt(priceInput[0].innerHTML);\n                let maxPrice = parseInt(priceInput[1].innerHTML);\n\n                if((maxPrice - minPrice >= priceGap) && maxPrice <= rangeInput[1].max){\n                    if(e.target.className === \"input-min\"){\n                        rangeInput[0].value = minPrice;\n                        rangeInput[0].setAttribute(\"data-term\",minPrice);\n                        range.style.left = ((minPrice / rangeInput[0].max) * 100) + \"%\";\n                    }else{\n                        rangeInput[1].value = maxPrice;\n                        maxFilterInput.value = maxVal;\n                        range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + \"%\";\n                    }\n                }\n            });\n        });\n\n        rangeInput.forEach(input =>{\n            input.addEventListener(\"input\", e =>{\n                let minVal = parseInt(rangeInput[0].value),\n                maxVal = parseInt(rangeInput[1].value);\n\n                if ((maxVal - minVal) < priceGap){\n                    if (e.target.className === \"range-min\"){\n                        rangeInput[0].value = maxVal - priceGap\n                    } else {\n                        rangeInput[1].value = minVal + priceGap;\n                    }\n                } else {\n                    priceInput[0].innerHTML = minVal;\n                    priceInput[1].innerHTML = maxVal;\n                    range.style.left = ((minVal / rangeInput[0].max) * 100) + \"%\";\n                    range.style.right = 100 - (maxVal / rangeInput[1].max) * 100 + \"%\";\n                    minFilterInput.value = minVal;\n                    maxFilterInput.value = maxVal;\n                }\n            });\n        });\n    }\n\n\n    let custom_filters = document.querySelectorAll(\".custom-filter\")\n\n    custom_filters.forEach((el)=>{\n\n        let control = el.querySelector(\".filter-heading\")\n        let body = el.querySelector(\".filter-body\")\n\n        if(control && body){\n\n            control.addEventListener('click', () => {\n\n                if(el.classList.contains(\"open\")){\n                    el.classList.remove(\"open\")\n                } else {\n                    el.classList.add(\"open\")\n                }\n\n            })\n        }\n    })\n\n    let mobile_control = document.querySelector(\".mobile-filter-heading\")\n    let filter_body = document.querySelector(\".custom-filter-wrapper\")\n\n    if(mobile_control && filter_body){\n        mobile_control.addEventListener('click', () => {\n            console.log(\"CLICK\")\n            // rotate svg\n            if(mobile_control.classList.contains(\"open\")){\n                mobile_control.classList.remove(\"open\")\n            } else {\n                mobile_control.classList.add(\"open\")\n            }\n\n            // open filters\n            if(filter_body.classList.contains(\"open\")){\n                filter_body.classList.remove(\"open\")\n            } else {\n                filter_body.classList.add(\"open\")\n            }\n        })\n    }\n\n    // Hide reset filters when no filters active\n    const reset_filters = document.querySelector('.reset-filter-wrapper');\n    const selected_filters_html = document.querySelectorAll('.selected-filter-wrapper *');\n\n    if (selected_filters_html.length > 0) {\n        reset_filters.style.display = 'block';\n    }\n\n    selected_filters_html.forEach(selected => {\n        selected.addEventListener('click', () => {\n            collection_grid.classList.add(\"loading\")\n        })\n    })\n\n    // Submit form on input change\n\n    const filter_inputs = document.querySelectorAll('.filter-container-wrapper select, .filter-container-wrapper input');\n    const filter_form = document.querySelector('.filter-container');\n    const reset_filter = document.querySelector('#reset-filters');\n    const collection_grid = document.querySelector('.collection-grid');\n\n    filter_inputs.forEach(input => {\n        input.addEventListener('change', () => {\n            collection_grid.classList.add(\"loading\")\n            filter_form.submit()\n        })\n    })\n\n    reset_filter.addEventListener('click', () => {\n        collection_grid.classList.add(\"loading\")\n    })\n\n\n})"],"names":["document","addEventListener","load_btn","querySelector","products_on_page","url","getAttribute","spinner","style","display","classList","add","fetch","then","response","ok","text","Error","data","html","createElement","innerHTML","links","new_grid","querySelectorAll","forEach","new_prod","append","remove","error","window","log","rangeInput","priceInput","range","minFilterInput","maxFilterInput","left","value","max","right","input","e","minPrice","parseInt","maxPrice","target","className","setAttribute","maxVal","minVal","el","control","body","contains","mobile_control","filter_body","console","reset_filters","selected_filters_html","length","selected","collection_grid","filter_inputs","filter_form","reset_filter","submit"],"sourceRoot":""}