/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/sections/v3-collection-grid.js":
/*!*****************************************************!*\
  !*** ./resources/js/sections/v3-collection-grid.js ***!
  \*****************************************************/
/***/ (() => {

eval("document.addEventListener('DOMContentLoaded', function () {\n  // Load more products\n\n  var load_btn = document.querySelector(\".custom-filter-load-more\");\n  var products_on_page = document.querySelector('.collection-grid');\n  var url = products_on_page.getAttribute('data-next-url');\n  var spinner = document.querySelector('.load-more-spinner');\n  if (load_btn) {\n    if (url === '') {\n      load_btn.style.display = 'none';\n    }\n    load_btn.addEventListener(\"click\", function () {\n      var total_showing = document.querySelector(\".update_product_count\").innerHTML;\n      var paginate_size = document.querySelector(\".collection_paginate_size\").innerHTML;\n      spinner.classList.add(\"show\");\n      fetch(url).then(function (response) {\n        if (response.ok) {\n          return response.text();\n        } else {\n          throw new Error('Network response was not ok.');\n        }\n      }).then(function (data) {\n        var html = document.createElement('div');\n        html.innerHTML = data;\n        var links = html.querySelector('.pagination-links').innerHTML;\n        document.querySelector('.pagination-links').innerHTML = links;\n        var new_grid = html.querySelector('.collection-grid');\n        url = new_grid.getAttribute('data-next-url');\n        if (url === '') {\n          load_btn.style.display = 'none';\n        }\n        //let new_products = new_grid.querySelectorAll(\".product-card, #collection-grid-cta, #collection-grid-cta-2\");\n        var new_products = new_grid.querySelectorAll(\".product-card\");\n        new_products.forEach(function (new_prod) {\n          products_on_page.append(new_prod);\n        });\n        spinner.classList.remove(\"show\");\n        //alert('test');\n        document.querySelector(\".update_product_count\").innerHTML = Number(total_showing) + Number(paginate_size);\n      })[\"catch\"](function (error) {\n        window.log(error);\n      });\n    });\n  }\n  var rangeInput = document.querySelectorAll(\".range-input input\");\n  if (rangeInput) {\n    var priceInput = document.querySelectorAll(\".price-input-show\");\n    var range = document.querySelector(\".slider .progress\");\n    var minFilterInput = document.querySelector('.min-price-filter');\n    var maxFilterInput = document.querySelector('.max-price-filter');\n    var priceGap = 1;\n    if (maxFilterInput) {\n      range.style.left = minFilterInput.value / rangeInput[0].max * 100 + \"%\";\n      range.style.right = 100 - maxFilterInput.value / rangeInput[1].max * 100 + \"%\";\n      rangeInput[0].value = minFilterInput.value;\n      rangeInput[1].value = maxFilterInput.value;\n      priceInput[0].innerHTML = minFilterInput.value;\n      priceInput[1].innerHTML = maxFilterInput.value;\n    }\n    priceInput.forEach(function (input) {\n      input.addEventListener(\"input\", function (e) {\n        var minPrice = parseInt(priceInput[0].innerHTML);\n        var maxPrice = parseInt(priceInput[1].innerHTML);\n        if (maxPrice - minPrice >= priceGap && maxPrice <= rangeInput[1].max) {\n          if (e.target.className === \"input-min\") {\n            rangeInput[0].value = minPrice;\n            rangeInput[0].setAttribute(\"data-term\", minPrice);\n            range.style.left = minPrice / rangeInput[0].max * 100 + \"%\";\n          } else {\n            rangeInput[1].value = maxPrice;\n            maxFilterInput.value = maxVal;\n            range.style.right = 100 - maxPrice / rangeInput[1].max * 100 + \"%\";\n          }\n        }\n      });\n    });\n    rangeInput.forEach(function (input) {\n      input.addEventListener(\"input\", function (e) {\n        var minVal = parseInt(rangeInput[0].value),\n          maxVal = parseInt(rangeInput[1].value);\n        if (maxVal - minVal < priceGap) {\n          if (e.target.className === \"range-min\") {\n            rangeInput[0].value = maxVal - priceGap;\n          } else {\n            rangeInput[1].value = minVal + priceGap;\n          }\n        } else {\n          priceInput[0].innerHTML = minVal;\n          priceInput[1].innerHTML = maxVal;\n          range.style.left = minVal / rangeInput[0].max * 100 + \"%\";\n          range.style.right = 100 - maxVal / rangeInput[1].max * 100 + \"%\";\n          minFilterInput.value = minVal;\n          maxFilterInput.value = maxVal;\n        }\n      });\n    });\n  }\n  var custom_filters = document.querySelectorAll(\".custom-filter\");\n  custom_filters.forEach(function (el) {\n    var control = el.querySelector(\".filter-heading\");\n    var body = el.querySelector(\".filter-body\");\n    if (control && body) {\n      control.addEventListener('click', function () {\n        if (el.classList.contains(\"open\")) {\n          el.classList.remove(\"open\");\n        } else {\n          el.classList.add(\"open\");\n        }\n      });\n    }\n  });\n  var mobile_control = document.querySelector(\".mobile-filter-heading\");\n  var filter_body = document.querySelector(\".custom-filter-wrapper\");\n  if (mobile_control && filter_body) {\n    mobile_control.addEventListener('click', function () {\n      //console.log(\"CLICK\");\n      //document.querySelector(\".mobile-filter-heading\").style.content = \"Hello\";\n      document.querySelector(\".mobile-filter-heading h2\").innerHTML = \"Hide Filters & Sort\";\n      var source = document.querySelector(\".filters_contents\");\n      document.querySelector(\".collection-grid-wrapper\").prepend(source);\n      document.querySelector(\".cta1\").classList.add(\"adjust_cta1\");\n      document.querySelector(\".collection-grid-wrapper\").classList.add(\"plp_open_filter\");\n      document.querySelector(\".filter-container-wrapper\").classList.add(\"filter_open\");\n      document.querySelector(\".filter-container-wrapper\").classList.remove(\"plp_filter_start\");\n      document.querySelector(\".collection-grid\").classList.add(\"shift_right\");\n\n      //document.getElementById(\"collection-grid-cta\").style.display = \"none\";\n      // rotate svg\n      if (mobile_control.classList.contains(\"open\")) {\n        mobile_control.classList.remove(\"open\");\n      } else {\n        mobile_control.classList.add(\"open\");\n        //console.log(\"OPEN\");\n      }\n\n      // open filters\n      if (filter_body.classList.contains(\"open\")) {\n        filter_body.classList.remove(\"open\");\n        //console.log(\"CLOSED\");\n        document.querySelector(\".mobile-filter-heading h2\").innerHTML = \"Show Filters & Sort\";\n        document.querySelector(\".collection-grid-wrapper\").classList.remove(\"plp_open_filter\");\n        document.querySelector(\".filter-container-wrapper\").classList.remove(\"filter_open\");\n        document.querySelector(\".filter-container-wrapper\").classList.add(\"plp_filter_start\");\n        document.querySelector(\".cta1\").classList.remove(\"adjust_cta1\");\n        //document.querySelector(\".filter-container-wrapper\").style.display = \"red\";\n      } else {\n        filter_body.classList.add(\"open\");\n      }\n    });\n  }\n\n  // Hide reset filters when no filters active\n  var reset_filters = document.querySelector('.reset-filter-wrapper');\n  var selected_filters_html = document.querySelectorAll('.selected-filter-wrapper *');\n  if (selected_filters_html.length > 0) {\n    reset_filters.style.display = 'block';\n  }\n  selected_filters_html.forEach(function (selected) {\n    selected.addEventListener('click', function () {\n      collection_grid.classList.add(\"loading\");\n    });\n  });\n\n  // Submit form on input change\n\n  // const filter_inputs = document.querySelectorAll('.filter-container-wrapper select, .filter-container-wrapper input');\n  // const filter_form = document.querySelector('.filter-container');\n  // const reset_filter = document.querySelector('#reset-filters');\n  // const collection_grid = document.querySelector('.collection-grid');\n\n  // filter_inputs.forEach(input => {\n  //     input.addEventListener('change', () => {\n  //         ///collection_grid.classList.add(\"loading\")\n  //         //filter_form.submit()\n  //     })\n  // })\n\n  // reset_filter.addEventListener('click', () => {\n  //     collection_grid.classList.add(\"loading\")\n  // })\n\n  // const filter_submit_btn = document.querySelectorAll('#submit_filters');\n  // const reset_filter_btn = document.querySelector('#clear_filters');\n\n  // filter_submit_btn.addEventListener('click', () => {\n  //     collection_grid.classList.add(\"loading\")\n  //     filter_form.submit()\n  // })\n\n  // reset_filter_btn.addEventListener('click', () => {\n  //     collection_grid.classList.add(\"loading\")\n  // })\n\n  var filter_inputs = document.querySelectorAll('#submit_filters');\n  var filter_reset_inputs = document.querySelectorAll('.reset-filters');\n  var filter_form = document.querySelector('.filter-container');\n  var reset_filter = document.querySelector('#reset-filters');\n  var collection_grid = document.querySelector('.collection-grid');\n  filter_inputs.forEach(function (input) {\n    input.addEventListener('click', function () {\n      collection_grid.classList.add(\"loading\");\n      filter_form.submit();\n    });\n  });\n\n  // filter_reset_inputs.forEach(input => {\n  //     input.addEventListener('click', () => {\n  //         collection_grid.classList.add(\"loading\")\n  //     })\n  // })\n\n  // reset_filter.addEventListener('click', () => {\n  //     collection_grid.classList.add(\"loading\")\n  // })\n\n  filter_reset_inputs.forEach(function (input) {\n    input.addEventListener('click', function () {\n      collection_grid.classList.add(\"loading\");\n      filter_form.submit();\n    });\n  });\n\n  //console.log(\"test...\");\n  // alert(\"test...\");\n\n  // var el = document.querySelector('.filter-container-wrapper');\n  // el.parentNode.removeChild(el);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/sections/v3-collection-grid.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/sections/v3-collection-grid.js"]();
/******/ 	
/******/ })()
;