{
  "version": 3,
  "file": "/assets/recently-viewed.min.js",
  "mappings": "MAAA,IAAMA,EAA0BC,SAASC,cAAc,oBAMjDC,EAAW,IAAIC,sBAAqB,SAAAC,GAEtC,GAA+B,GAA3BA,EAAM,GAAGC,eAAwB,CAEjCH,EAASI,UAAUP,GAEnB,IAAIQ,EAAYC,aAAaC,QAAQ,gCACrC,GAAIF,EAAW,CACXG,cAAgBH,EAAUI,QAAQ,IAAI,IAAIA,QAAQ,IAAI,IAAIC,MAAM,KAEhE,IAAIC,EAAkBb,SAASC,cAAc,2BAE7CS,cAAcI,SAAQ,SAAAC,GAClB,IAAIC,EAASD,EAASJ,QAAQ,KAAK,IAEnCM,MAAMC,OAAOC,QAAQC,OAAOC,KAAO,YAAHC,OAAeN,EAAM,0CAClDO,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,UAAYH,EAASI,OAEzC,IACCL,MAAK,SAAAM,GACJ,IACMC,GADe,IAAIC,WAAYC,gBAAgBH,EAAM,aAC1BI,gBAAgBhC,cAAc,kBACzDiC,EAAgBJ,EAAYK,QAAQC,UAE1C,GADAC,QAAQC,IAAI,iCAAkCJ,GACzB,IAAjBA,EAAJ,CAGA,IAAIK,EAAMrB,OAAOsB,SAASC,KAAO,IAC7BC,EAAe1C,SAAS2C,cAAc,OAC1CD,EAAaE,UAAUC,IAAI,gBAC3BH,EAAaI,mBAAmB,aAAchB,EAAYiB,WAEtDjB,IAAgBS,GAClB1B,EAAgBiC,mBAAmB,aAAcJ,EAAaK,WAG1C,IAAI7B,OAAO8B,OAAO,mBAAoB,CAC1DC,cAAe,IACfC,aAAc,GACdC,YAAa,CACX,IAAK,CACHF,cAAe,GAEjB,KAAM,CACJA,cAAe,GAEjB,KAAM,CACJA,cAAe,KArBrB,CAyBF,IAAE,OACK,SAAAG,GACLf,QAAQe,MAAMA,EAChB,GAEN,GAEJ,MACIpD,SAASC,cAAc,0BAA0BoD,SAAU,EAC3DrD,SAASC,cAAc,kCAAkCqD,MAAMC,QAAU,OACzEvD,SAASC,cAAc,8BAA8BqD,MAAMC,QAAU,OACrEvD,SAASC,cAAc,4CAA4CqD,MAAMC,QAAU,OACnFvD,SAASC,cAAc,oCAAoCqD,MAAMC,QAAU,OAC3EvD,SAASC,cAAc,mCAAmCqD,MAAME,cAAgB,OAChFxD,SAASC,cAAc,0CAA0CqD,MAAMG,OAAS,OAChFzD,SAASC,cAAc,wCAAwCyD,SAAW,WAC1E1D,SAASC,cAAc,0BAA0BqD,MAAMC,QAAU,OACjEvD,SAASC,cAAc,0CAA0CqD,MAAMG,OAAQ,OAI/D,IAAIvC,OAAO8B,OAAO,uBAAwB,CAC1DC,cAAe,IACfC,aAAc,GACdC,YAAa,CACT,IAAK,CACHF,cAAe,GAEjB,KAAM,CACJA,cAAe,GAEjB,KAAM,CACJA,cAAe,KAI7B,CAGJ,GAlGgB,CACfU,WAAY,UAmGbzD,EAAS0D,QAAQ7D,E",
  "sources": [
    "webpack://quickfire-shopify-theme/./resources/js/sections/recently-viewed.js"
  ],
  "sourcesContent": [
    "const recently_viewed_section = document.querySelector('.recently-viewed');\n\nconst options = {\n\trootMargin: '100px'\n}\n\nconst observer = new IntersectionObserver(entry => {\n\n    if (entry[0].isIntersecting == true) {\n\n        observer.unobserve(recently_viewed_section)\n\n        let rec_prods = localStorage.getItem('recentlyViewedProductHandles');\n        if (rec_prods) {\n            rec_prods_arr = rec_prods.replace(\"[\",\"\").replace(\"]\",\"\").split(',');\n\n            let recently_viewed = document.querySelector('.recently-viewed-slider');\n\n            rec_prods_arr.forEach(rec_prod => {\n                let handle = rec_prod.replace(/\"/g,'');\n\n                fetch(window.Shopify.routes.root + `products/${handle}?view=card&section_id=gb-product-card`)\n                  .then(response => {\n                    if (response.ok) {\n                      return response.text();\n                    } else {\n                      throw new Error(\"Error: \" + response.status);\n                    }\n                  })\n                  .then(data => {\n                    const htmlDocument = new DOMParser().parseFromString(data, \"text/html\");\n                    const productCard = htmlDocument.documentElement.querySelector(\"[product-card]\");\n                    const productExists = productCard.dataset.productId;\n                    console.log(\"ðŸš€ ~ observer ~ productExists:\", productExists)\n                    if (productExists == \"\") {\n                      return;\n                    }\n                    let url = window.location.href + \"#\";\n                    let swiper_slide = document.createElement(\"div\");\n                    swiper_slide.classList.add('swiper-slide');\n                    swiper_slide.insertAdjacentHTML('afterbegin', productCard.outerHTML);\n\n                    if (productCard !== url) {\n                      recently_viewed.insertAdjacentHTML('afterbegin', swiper_slide.outerHTML);\n                    }\n\n                    const recent_swiper = new window.swiper('.recently-swiper', {\n                      slidesPerView: 1.5,\n                      spaceBetween: 15,\n                      breakpoints: {\n                        768: {\n                          slidesPerView: 2,\n                        },\n                        1028: {\n                          slidesPerView: 3,\n                        },\n                        1280: {\n                          slidesPerView: 4,\n                        },\n                      },\n                    });\n                  })\n                  .catch(error => {\n                    console.error(error);\n                  });\n\n            });\n\n        } else {\n            document.querySelector('.recently-viewed #tab2').checked = true;\n            document.querySelector('.recently-viewed #tab1 + label').style.display = 'none';\n            document.querySelector('.recently-viewed .content1').style.display = 'none';\n            document.querySelector('.recently-viewed #select-recently-viewed').style.display = 'none';\n            document.querySelector('.recently-viewed .select-chevron').style.display = 'none';\n            document.querySelector('.recently-viewed .custom-select').style.pointerEvents = 'none';\n            document.querySelector('.recently-viewed .custom-select select').style.border = 'none';\n            document.querySelector('.recently-viewed #select-bestsellers').selected = 'selected';\n            document.querySelector('.recently-viewed .pipe').style.display = 'none';\n            document.querySelector('.recently-viewed input:checked + label').style.border= 'none';\n        }\n\n        // Init section settings collection swiper\n        const coll_swiper = new window.swiper('.best-sellers-swiper', {\n            slidesPerView: 1.5,\n            spaceBetween: 15,\n            breakpoints: {\n                768: {\n                  slidesPerView: 2,\n                },\n                1028: {\n                  slidesPerView: 3,\n                },\n                1280: {\n                  slidesPerView: 4,\n                },\n            },\n        });\n    }\n\n\n}, options)\n\nobserver.observe(recently_viewed_section)"
  ],
  "names": [
    "recently_viewed_section",
    "document",
    "querySelector",
    "observer",
    "IntersectionObserver",
    "entry",
    "isIntersecting",
    "unobserve",
    "rec_prods",
    "localStorage",
    "getItem",
    "rec_prods_arr",
    "replace",
    "split",
    "recently_viewed",
    "forEach",
    "rec_prod",
    "handle",
    "fetch",
    "window",
    "Shopify",
    "routes",
    "root",
    "concat",
    "then",
    "response",
    "ok",
    "text",
    "Error",
    "status",
    "data",
    "productCard",
    "DOMParser",
    "parseFromString",
    "documentElement",
    "productExists",
    "dataset",
    "productId",
    "console",
    "log",
    "url",
    "location",
    "href",
    "swiper_slide",
    "createElement",
    "classList",
    "add",
    "insertAdjacentHTML",
    "outerHTML",
    "swiper",
    "slidesPerView",
    "spaceBetween",
    "breakpoints",
    "error",
    "checked",
    "style",
    "display",
    "pointerEvents",
    "border",
    "selected",
    "rootMargin",
    "observe"
  ],
  "sourceRoot": ""
}
