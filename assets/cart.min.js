/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/qf/cart.js":
/*!*********************************!*\
  !*** ./resources/js/qf/cart.js ***!
  \*********************************/
/***/ (() => {

        eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar CartQf = /*#__PURE__*/function () {\n  function CartQf() {\n    _classCallCheck(this, CartQf);\n    this.cart = window.QF.cart;\n    this.endpoints = {\n      add: {\n        url: 'cart/add.js',\n        method: 'post'\n      },\n      get: {\n        url: 'cart.js',\n        method: 'get'\n      },\n      update: {\n        url: 'cart/update.js',\n        method: 'post'\n      },\n      change: {\n        url: 'cart/change.js',\n        method: 'post'\n      },\n      clear: {\n        url: 'cart/clear.js',\n        method: 'post'\n      }\n    };\n    this.selectors = {\n      cartDrawerContainer: '[cart-drawer-container]',\n      cartTabs: '[side-cart-tab]',\n      cartContent: '[side-cart-form]',\n      savedCartTab: '[saved-cart-tab]',\n      quickViewContainer: '[quick-view-container]',\n      sideCartRecommendations: '[side-cart-recommendations]',\n      sideCartRecommendationsSection: '[side-cart-recommendations-section]',\n      sideCartRecommendationsContainer: '[side-cart-recommended-container]',\n      cartRecommendations: '[cart-recommendations]',\n      cartRecommendationsSlider: '[cart-recommendations-slider]',\n      cartItemsContainer: '[cart-items-container]',\n      cartCount: '[cart-count]',\n      openSideCartTrigger: '[open-side-cart]',\n      sideCartInner: '[side-cart-inner]',\n      cartContainer: '[cart-container]',\n      freeDeliveryStatus: '[free-delivery-status]',\n      sideCartTotal: '[side-cart-total]'\n    };\n  }\n  _createClass(CartQf, [{\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event_name, includeCart) {\n      var contents = null;\n      if (includeCart) {\n        contents = {\n          detail: {\n            cart: this.cart\n          }\n        };\n      }\n      window.dispatchEvent(new CustomEvent(event_name, contents));\n    }\n  }, {\n    key: \"add\",\n    value: function () {\n      var _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n        var responseData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return this.request('add', data);\n            case 3:\n              responseData = _context.sent;\n              this.mergeWithCurrentCart(responseData);\n              this.dispatchEvent(\"cart_changed\", true);\n              this.dispatchEvent(\"item_added\", true);\n              return _context.abrupt(\"return\", this.cart);\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              throw _context.t0;\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n      function add(_x) {\n        return _add.apply(this, arguments);\n      }\n      return add;\n    }()\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return this.request('get');\n            case 3:\n              response = _context2.sent;\n              this.cart = response.data;\n              return _context2.abrupt(\"return\", this.cart);\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              throw _context2.t0;\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 8]]);\n      }));\n      function get() {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data) {\n        var responseData;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return this.request('update', data);\n            case 3:\n              responseData = _context3.sent;\n              this.cart = responseData;\n              this.dispatchEvent(\"cart_changed\", true);\n              return _context3.abrupt(\"return\", this.cart);\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              throw _context3.t0;\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n      function update(_x2) {\n        return _update.apply(this, arguments);\n      }\n      return update;\n    }()\n  }, {\n    key: \"change\",\n    value: function () {\n      var _change = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(data) {\n        var responseData;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return this.request('change', data);\n            case 3:\n              responseData = _context4.sent;\n              this.cart = responseData;\n              this.dispatchEvent(\"cart_changed\", true);\n              return _context4.abrupt(\"return\", this.cart);\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              throw _context4.t0;\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 9]]);\n      }));\n      function change(_x3) {\n        return _change.apply(this, arguments);\n      }\n      return change;\n    }()\n  }, {\n    key: \"remove\",\n    value: function () {\n      var _remove = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(variant_id) {\n        var updates, _yield$this$request, responseData;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              updates = {\n                updates: _defineProperty({}, variant_id, 0)\n              };\n              _context5.next = 4;\n              return this.request('update', updates);\n            case 4:\n              _yield$this$request = _context5.sent;\n              responseData = _yield$this$request.data;\n              this.cart = responseData;\n              this.dispatchEvent(\"cart_changed\", true);\n              this.dispatchEvent(\"item_removed\", true);\n              return _context5.abrupt(\"return\", this.cart);\n            case 12:\n              _context5.prev = 12;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw _context5.t0;\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 12]]);\n      }));\n      function remove(_x4) {\n        return _remove.apply(this, arguments);\n      }\n      return remove;\n    }()\n  }, {\n    key: \"clear\",\n    value: function () {\n      var _clear = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _yield$this$request2, responseData;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return this.request('clear');\n            case 3:\n              _yield$this$request2 = _context6.sent;\n              responseData = _yield$this$request2.data;\n              this.cart = responseData;\n              this.dispatchEvent(\"cart_changed\", true);\n              this.dispatchEvent(\"cart_cleared\", true);\n              return _context6.abrupt(\"return\", this.cart);\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 11]]);\n      }));\n      function clear() {\n        return _clear.apply(this, arguments);\n      }\n      return clear;\n    }()\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(key, data) {\n        var url, method, headers, response;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              url = window.Shopify.routes.root + this.endpoints[key].url;\n              method = this.endpoints[key].method;\n              headers = {\n                'Content-Type': 'application/json'\n              };\n              _context7.next = 6;\n              return fetch(url, {\n                method: method,\n                headers: headers,\n                body: JSON.stringify(data)\n              });\n            case 6:\n              response = _context7.sent;\n              if (!response.ok) {\n                _context7.next = 11;\n                break;\n              }\n              return _context7.abrupt(\"return\", response.json());\n            case 11:\n              _context7.next = 13;\n              return response.json();\n            case 13:\n              throw _context7.sent;\n            case 14:\n              _context7.next = 19;\n              break;\n            case 16:\n              _context7.prev = 16;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 16]]);\n      }));\n      function request(_x5, _x6) {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"mergeWithCurrentCart\",\n    value: function mergeWithCurrentCart(data) {\n      var _this = this;\n      if (data.items) {\n        data.items.forEach(function (item) {\n          var index = _this.cart.items.findIndex(function (e) {\n            return e.id === item.id;\n          });\n          if (index > -1) {\n            _this.cart.items[index] = item;\n          } else {\n            _this.cart.items.push(item);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"freeDeliveryProgress\",\n    value: function freeDeliveryProgress(el) {\n      var free_delivery_amount = JSON.parse(el.dataset.freeDelivery)['amount'];\n      var free_delivery_currency = el.dataset.currencySymbol;\n      var cart_total = document.querySelector(this.selectors.sideCartTotal).dataset.subTotal / 100;\n      var progress_text = el.dataset.freeProgressText;\n      var reached_text = el.dataset.reachedFreeText;\n      if (!free_delivery_amount) {\n        el.style.display = 'none';\n      } else if (cart_total < free_delivery_amount) {\n        var spend_more = (free_delivery_amount - cart_total).toFixed(2);\n        var spend_more_formatted = Shopify.formatMoney(spend_more, free_delivery_currency);\n        el.innerHTML = \"\".concat(spend_more_formatted, \" \").concat(progress_text);\n      } else {\n        el.innerHTML = reached_text;\n      }\n    }\n  }, {\n    key: \"openSideCart\",\n    value: function openSideCart() {\n      var _this2 = this;\n      this.reRenderSideCart(function () {\n        var cart_tabs = document.querySelectorAll(_this2.selectors.cartTabs);\n        var cart_content = document.querySelector(_this2.selectors.cartContent);\n        var saved_content = document.querySelector(_this2.selectors.savedCartTab);\n        var quickview = document.querySelector(_this2.selectors.quickViewContainer);\n        if (quickview) {\n          quickview.classList.remove('active');\n        }\n        cart_content.style.display = 'flex';\n        saved_content.style.display = 'none';\n        cart_tabs[0].classList.add('active');\n        cart_tabs[1].classList.remove('active');\n        var sideCartContainer = document.querySelector(_this2.selectors.cartDrawerContainer);\n        if (sideCartContainer) {\n          sideCartContainer.classList.add(\"open\");\n          document.body.classList.add(\"fixed\");\n          sideCartContainer.style.height = window.innerHeight + \"px\";\n          window.addEventListener(\"resize\", function () {\n            sideCartContainer.style.height = window.innerHeight + \"px\";\n          });\n          sideCartContainer.querySelector(_this2.selectors.sideCartRecommendations).classList.add('open');\n          _this2.dispatchEvent(\"side_cart_opened\", false);\n        }\n      });\n    }\n  }, {\n    key: \"closeSideCart\",\n    value: function closeSideCart() {\n      var sideCartContainer = document.querySelector(this.selectors.cartDrawerContainer);\n      if (sideCartContainer) {\n        sideCartContainer.querySelector(this.selectors.sideCartRecommendations).classList.remove('open');\n        sideCartContainer.classList.remove(\"open\");\n        document.body.classList.remove(\"fixed\");\n        this.dispatchEvent(\"side_cart_closed\", false);\n      }\n    }\n  }, {\n    key: \"reRenderSideCart\",\n    value: function () {\n      var _reRenderSideCart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var _this3 = this;\n        var successCallback,\n          updateCartCount,\n          response,\n          data,\n          html,\n          side_cart_inner,\n          free_delivery_el,\n          first_cart_item,\n          productRecommendationsSection,\n          section_id,\n          recommendationsUrl,\n          recommendationsResponse,\n          recommendationsText,\n          recommendationsHtml,\n          recommendations,\n          product_links,\n          _productRecommendationsSection,\n          sectionURL,\n          url,\n          sectionResponse,\n          sectionText,\n          sectionHtml,\n          _args8 = arguments;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              successCallback = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : null;\n              // UPDATE CART COUNT\n              updateCartCount = function updateCartCount() {\n                var cart = document.querySelector([_this3.selectors.cartItemsContainer]);\n                var cart_count = cart.getAttribute('data-items-count');\n                var cartCountEl = document.querySelectorAll(_this3.selectors.cartCount);\n                var cartBtnEl = document.querySelector([_this3.selectors.openSideCartTrigger]);\n                if (cartBtnEl && cartCountEl && cart && cart_count) {\n                  cartCountEl.forEach(function (count_el) {\n                    if (cart_count == 0) {\n                      count_el.classList.add('empty-cart');\n                      cartBtnEl.classList.add('empty-cart');\n                    } else {\n                      count_el.classList.remove('empty-cart');\n                      cartBtnEl.classList.remove('empty-cart');\n                    }\n                    count_el.innerHTML = cart_count;\n                  });\n                }\n              };\n              _context8.prev = 2;\n              _context8.next = 5;\n              return fetch(window.Shopify.routes.root + \"cart?sections=gb-side-cart\");\n            case 5:\n              response = _context8.sent;\n              if (response.ok) {\n                _context8.next = 8;\n                break;\n              }\n              throw new Error(\"Error: \" + response.status);\n            case 8:\n              _context8.next = 10;\n              return response.json();\n            case 10:\n              data = _context8.sent;\n              html = data[\"gb-side-cart\"];\n              side_cart_inner = document.querySelector(this.selectors.sideCartInner);\n              if (!(side_cart_inner && html)) {\n                _context8.next = 62;\n                break;\n              }\n              side_cart_inner.innerHTML = html;\n              free_delivery_el = document.querySelector(this.selectors.freeDeliveryStatus);\n              this.freeDeliveryProgress(free_delivery_el);\n              updateCartCount();\n              first_cart_item = side_cart_inner.querySelector('.item');\n              if (first_cart_item) {\n                first_cart_item = first_cart_item.dataset.productId;\n              }\n              if (!first_cart_item) {\n                _context8.next = 38;\n                break;\n              }\n              productRecommendationsSection = document.querySelector(this.selectors.cartRecommendations);\n              section_id = productRecommendationsSection.dataset.sectionId;\n              recommendationsUrl = \"/recommendations/products?section_id=\".concat(section_id, \"&product_id=\").concat(first_cart_item, \"&limit=5\");\n              _context8.next = 26;\n              return fetch(recommendationsUrl);\n            case 26:\n              recommendationsResponse = _context8.sent;\n              if (!recommendationsResponse.ok) {\n                _context8.next = 37;\n                break;\n              }\n              _context8.next = 30;\n              return recommendationsResponse.text();\n            case 30:\n              recommendationsText = _context8.sent;\n              recommendationsHtml = document.createElement('div');\n              recommendationsHtml.innerHTML = recommendationsText;\n              recommendations = recommendationsHtml.querySelector(this.selectors.cartRecommendations);\n              if (recommendations && recommendations.innerHTML.trim().length) {\n                productRecommendationsSection.innerHTML = recommendations.innerHTML;\n                product_links = productRecommendationsSection.querySelectorAll('.product-link');\n                product_links.forEach(function (product_link) {\n                  product_link.innerHTML = \"View\";\n                });\n                new window.swiper('.side-cart-recommendations-slider', {\n                  slidesPerView: 2.4,\n                  spaceBetween: 10,\n                  breakpoints: {\n                    1200: {\n                      slidesPerView: 3.2\n                    }\n                  },\n                  lazy: {\n                    enabled: true,\n                    checkInView: false,\n                    loadOnTransitionStart: true,\n                    loadPrevNext: true,\n                    loadPrevNextAmount: 1\n                  }\n                });\n              }\n              _context8.next = 38;\n              break;\n            case 37:\n              throw new Error(\"Error: \" + recommendationsResponse.status);\n            case 38:\n              if (!(window.innerWidth > 767.98)) {\n                _context8.next = 60;\n                break;\n              }\n              if (!first_cart_item) {\n                _context8.next = 59;\n                break;\n              }\n              document.querySelector(this.selectors.cartRecommendationsSlider).style.display = 'none';\n              _productRecommendationsSection = document.querySelector(this.selectors.sideCartRecommendationsSection);\n              sectionURL = _productRecommendationsSection.dataset.url;\n              url = sectionURL.replace(\"product_id=\", \"product_id=\" + first_cart_item);\n              _context8.next = 46;\n              return fetch(url);\n            case 46:\n              sectionResponse = _context8.sent;\n              if (!sectionResponse.ok) {\n                _context8.next = 56;\n                break;\n              }\n              _context8.next = 50;\n              return sectionResponse.text();\n            case 50:\n              sectionText = _context8.sent;\n              sectionHtml = document.querySelector(this.selectors.sideCartRecommendationsContainer);\n              sectionHtml.innerHTML = sectionText;\n              new window.swiper('.side-cart-recommendations-slider', {\n                slidesPerView: 2,\n                spaceBetween: 20,\n                navigation: {\n                  nextEl: \".swiper-button-next.cart-rec\",\n                  prevEl: \".swiper-button-prev.cart-rec\"\n                },\n                lazy: {\n                  enabled: true,\n                  checkInView: false,\n                  loadOnTransitionStart: true,\n                  loadPrevNext: true,\n                  loadPrevNextAmount: 1\n                },\n                breakpoints: {\n                  1134: {\n                    slidesPerView: 3,\n                    spaceBetween: 30\n                  },\n                  1500: {\n                    slidesPerView: 4,\n                    spaceBetween: 30\n                  }\n                }\n              });\n              _context8.next = 57;\n              break;\n            case 56:\n              throw new Error(\"Error: \" + sectionResponse.status);\n            case 57:\n              _context8.next = 60;\n              break;\n            case 59:\n              new window.swiper(\".cart-recommendations-slider\", {\n                slidesPerView: 2,\n                spaceBetween: 20,\n                navigation: {\n                  nextEl: \".swiper-button-next.cart-rec\",\n                  prevEl: \".swiper-button-prev.cart-rec\"\n                },\n                lazy: {\n                  enabled: true,\n                  checkInView: false,\n                  loadOnTransitionStart: true,\n                  loadPrevNext: true,\n                  loadPrevNextAmount: 1\n                },\n                breakpoints: {\n                  1134: {\n                    slidesPerView: 3,\n                    spaceBetween: 30\n                  },\n                  1500: {\n                    slidesPerView: 4,\n                    spaceBetween: 30\n                  }\n                }\n              });\n            case 60:\n              this.cartRenderedEvent(response, html);\n              if (successCallback) {\n                successCallback();\n              }\n            case 62:\n              _context8.next = 67;\n              break;\n            case 64:\n              _context8.prev = 64;\n              _context8.t0 = _context8[\"catch\"](2);\n              console.log(\"Error:\", _context8.t0);\n            case 67:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[2, 64]]);\n      }));\n      function reRenderSideCart() {\n        return _reRenderSideCart.apply(this, arguments);\n      }\n      return reRenderSideCart;\n    }()\n  }, {\n    key: \"reRenderCart\",\n    value: function reRenderCart() {\n      var _this4 = this;\n      fetch(window.Shopify.routes.root + \"cart?sections=v2-cart\").then(function (response) {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json(); // Parse the response as JSON\n      }).then(function (data) {\n        var html = data[\"v2-cart\"];\n        var cart_inner = document.querySelector(_this4.selectors.cartContainer);\n        if (cart_inner && html) {\n          cart_inner.innerHTML = html;\n          _this4.cartRenderedEvent(html);\n        }\n      })[\"catch\"](function (error) {\n        console.error(\"Error:\", error);\n      });\n    }\n  }, {\n    key: \"cartRenderedEvent\",\n    value: function cartRenderedEvent(response, html) {\n      var event = new CustomEvent(\"cart_rendered\", {\n        detail: {\n          response: response,\n          html: html\n        }\n      });\n      window.dispatchEvent(event);\n    }\n  }]);\n  return CartQf;\n}(); // export default new CartQf();\nwindow.CartQf = CartQf;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/qf/cart.js\n");

        /***/
})

    /******/
});
/************************************************************************/
/******/
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/qf/cart.js"]();
  /******/
  /******/
})()
  ;