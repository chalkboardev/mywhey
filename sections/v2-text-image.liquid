
{% comment %}

    This sections styling is shared with v2-video-image-.liquid

    Section notes:
        - Split down the middle (Half image, half text box)
        - Ability to invert (ie image can be left or right)
        - Text alignment within space (Left/Central/Right)
        - Title, description, CTA button (Limited to one)
        - Mobile stack text then image
        - Mobile option to hide image

    Section Author: jo@quickfiredigital.com

{% endcomment %}

{{ 'section-v2-text-image.min.css' | asset_url | stylesheet_tag }}

{%- liquid 
    assign image = section.settings.image 
    assign video = section.settings.video
    assign title = section.settings.title 
    assign body = section.settings.body 

    assign url = section.settings.url 
    assign url_text = section.settings.url_text 

    assign layout = section.settings.layout 
    assign align = section.settings.align 
    assign size = section.settings.size 
    assign colour = section.settings.colour 
    assign background = section.settings.background 
    assign button_style = section.settings.button_style 

    if section.settings.hide_mobile == true 
        assign hide_mobile = "hide-mobile" 
    endif 
-%}

<section class="text-image {% if background == '' or background == 'rgba(0,0,0,0)' %}vertical-margin{% else %}vertical-padding{% endif %}" style="background:{{ background }};" id="image-text-{{ section.id }}">
    <div class="page-width {{ layout }}">
    
        <div class="image-wrapper {{ hide_mobile }}">
          {%- if section.settings.video -%}

            <video preload="none" id="video-{{ section.id }}">
              <source src="{{ section.settings.video.sources[1].url }}" type="{{ section.settings.video.sources[1].mime_type }}">
            </video>
  
            <div class="video-overlay">
              {{ section.settings.video.preview_image | image_url: width: 600, format: "jpg" | image_tag: loading: 'lazy', decoding: "async" }}
              <div class="video-control play-video">
                <svg xmlns="http://www.w3.org/2000/svg" class="play" viewBox="0 0 24 24">
                  <path d="M10,16.5V7.5L16,12M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" />
                </svg>
              </div>
              <div class="video-control pause-video">
                <svg xmlns="http://www.w3.org/2000/svg" class="pause" viewBox="0 0 24 24">
                  <path d="M15,16H13V8H15M11,16H9V8H11M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" />
                </svg>
              </div>
            </div>
      
          {%- elsif section.settings.image != blank -%}
            {{ image | image_url: width: 900, format: "jpg" | image_tag: loading: 'lazy', decoding: "async" }}
          {%- else -%}
            {{ 'lifestyle-1' | placeholder_svg_tag }}
          {%- endif -%}
        </div>
    
        {% if title != blank or body != blank or show_button == true %}
            <div class="content-wrapper {{ align }}" style="color: {{ colour }};">
                <h2 class="title {{ size }}">
                    {% if title != blank %}
                        {{ title }}
                    {% endif %}
                </h2>
        
                {% if body != blank %}
                    <p class="body">{{ body }}</p>
                {% endif %}
        
                {% if url != blank and url_text != blank %}
                    {% assign show_button = true %}
                    <a class="{{ button_style }}" href="{{ url }}">
                      {{- url_text -}}
                      <span class="visually-hidden">Link to {{ url }}</span>
                    </a>
                {% endif %}
        
            </div>
        {% endif %}
        
    </div>
</section>

{%- if video -%}
  <script>

    let video_{{ section.id | replace: "-", "" }} = document.querySelector('#video-{{section.id }}')
    let video_play_{{ section.id | replace: "-", "" }} = video_{{ section.id | replace: "-", "" }}.nextElementSibling.querySelector('svg.play');
    let video_overlay_{{ section.id | replace: "-", "" }} = video_{{ section.id | replace: "-", "" }}.nextElementSibling;
    let video_pause_overlay_{{ section.id | replace: "-", "" }} = video_{{ section.id | replace: "-", "" }}.nextElementSibling.querySelector('.pause-video');
    let video_overlay_play_{{ section.id | replace: "-", "" }} = video_{{ section.id | replace: "-", "" }}.nextElementSibling.querySelector('.play-video');
    let video_img_{{ section.id | replace: "-", "" }} = video_{{ section.id | replace: "-", "" }}.nextElementSibling.querySelector('img');

    video_play_{{ section.id | replace: "-", "" }}.addEventListener('click', () => {
      video_{{ section.id | replace: "-", "" }}.play();
      video_overlay_{{ section.id | replace: "-", "" }}.classList.add('pause');
      video_overlay_play_{{ section.id | replace: "-", "" }}.style.display = 'none';
      video_img_{{ section.id | replace: "-", "" }}.style.display = 'none';
      video_pause_overlay_{{ section.id | replace: "-", "" }}.style.display = 'block';
    })

    video_pause_overlay_{{ section.id | replace: "-", "" }}.addEventListener('click', () => {
      video_{{ section.id | replace: "-", "" }}.pause();
      video_pause_overlay_{{ section.id | replace: "-", "" }}.style.display = 'none';
      video_overlay_play_{{ section.id | replace: "-", "" }}.style.display = 'block';
    })

    
    document.addEventListener('DOMContentLoaded',  function() {
      const video_section_{{ section.id | replace: "-", "" }} = document.querySelector('#image-text-{{ section.id }}');
      console.log("ðŸš€ ~ file: tb-image-text-cta.liquid:123 ~ document.addEventListener ~ video_section_{{ section.id | replace: "-", "" }}", video_section_{{ section.id | replace: "-", "" }})

      const options_{{ section.id | replace: "-", "" }} = {
        rootMargin: '50px'
      }

      const observer_{{ section.id | replace: "-", "" }} = new IntersectionObserver(entry => {

        if (entry[0].isIntersecting == false) {
          if (!video_{{ section.id | replace: "-", "" }}.classList.contains('pause')) {
            video_{{ section.id | replace: "-", "" }}.pause();
            video_overlay_play_{{ section.id | replace: "-", "" }}.style.display = 'block';
            video_pause_overlay_{{ section.id | replace: "-", "" }}.style.display = 'none';
          }
        }

      }, options_{{ section.id | replace: "-", "" }})

      console.log(observer_{{ section.id | replace: "-", "" }})

      observer_{{ section.id | replace: "-", "" }}.observe(video_section_{{ section.id | replace: "-", "" }})

    })

    

  </script>
{%- endif -%}

{% schema %}
{
  "name": "Text Image",
  "tag": "section",
  "class": "text-image-section",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "video",
      "id": "video",
      "label": "Video"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Subtitle Here"
    },
    {
      "type": "inline_richtext",
      "id": "body",
      "label": "Title",
      "default": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy"
    },
    {
      "type": "text",
      "id": "url_text",
      "label": "Button Text",
      "default": "Learn More"
    },
    {
      "type": "url",
      "id": "url",
      "label": "Button Link",
      "info": "The button will only display with a Link and Text"
    },
    {
      "type": "header",
      "content": "Styles"
    },
    {
      "type": "select",
      "id": "layout",
      "label": "Layout",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "select",
      "id": "align",
      "label": "Content Alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "middle",
          "label": "Middle"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "middle"
    },
    {
      "type": "select",
      "id": "size",
      "label": "Title Size",
      "options": [
        {
          "value": "heading-sm",
          "label": "Small"
        },
        {
          "value": "heading-md",
          "label": "Medium"
        },
        {
          "value": "heading-lg",
          "label": "Large"
        }
      ],
      "default": "heading-md"
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "Button Style",
      "options": [
        {
          "value": "button-1",
          "label": "Style 1"
        },
        {
          "value": "button-2",
          "label": "Style 2"
        },
        {
          "value": "button-3",
          "label": "Style 3"
        },
        {
          "value": "button-4",
          "label": "Style 4"
        },
        {
          "value": "button-5",
          "label": "Style 5"
        },
        {
          "value": "button-6",
          "label": "Style 6"
        }
      ],
      "default": "button-1"
    },
    {
      "type": "color",
      "id": "colour",
      "label": "Colour"
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background"
    },
    {
      "type": "header",
      "content": "Mobile Settings"
    },
    {
      "type": "checkbox",
      "id": "hide_mobile",
      "label": "Hide Video",
      "default": false
    }
  ],
  "blocks": [

  ],
  "presets": [
    {
      "name": "Text Image"
    }
  ]
}
{% endschema %}